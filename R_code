
library(ggplot2)
#vegan v2.5-6
library(vegan)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(readODS)
library(FSA)
library(pairwiseAdonis)

setwd("/home/kvasir7/Projects/Graptemys Microbiome Project")
getwd()

source("miseqR.R")

theme_set(theme_bw())

sharedfile = "turtle.shared"
taxfile = "turtle.taxonomy"
mapfile = "turtlemetadata2.csv"

mothur_data <- import_mothur(mothur_shared_file = sharedfile,
+   mothur_constaxonomy_file = taxfile)

map <- read.csv(mapfile)
map <- sample_data(map)
rownames(map) <- map$SampleID
sample_names(map)
sample_names(mothur_data)

turtle_merge <- merge_phyloseq(mothur_data, map)
turtle_merge

colnames(tax_table(turtle_merge))

colnames(tax_table(turtle_merge)) <- c("Kingdom", "Phylum", "Class", 
  "Order", "Family", "Genus")

turtle <- turtle_merge
turtle

###NMDS###
set.seed(1)

# Ordinate, WI double standardization
turtle_nmds <- ordinate(
  physeq = turtle, 
  method = "NMDS", 
  distance = "bray"
)
# Solution reached at run 20, stress=0.1430593 
# Plot 
p <- plot_ordination(
  physeq = turtle,
  ordination = turtle_nmds,
  color = "Location",
  shape = "Sex")

p + scale_color_manual(values = c("orange", "blue", "black")) +
  geom_point(aes(color = Location), alpha = 0.7, size = 6)

#PERMANOVA

set.seed(1)

turtle_bray <- phyloseq::distance(turtle, method = "bray")
sampledf <- data.frame(sample_data(turtle))
adonis(turtle_bray ~ Location, data = sampledf)

adonis(turtle_bray ~ Sex, data = sampledf)

#POSTHOC PAIRWISE ADONIS
#convert phyloseq object into OTU table

vegan_otu <- function(physeq) {
  OTU <- otu_table(physeq)
  if (taxa_are_rows(OTU)) {
  OTU <- t(OTU)
  }
  return(as(OTU, "matrix"))
  }
 
 pairwise.adonis(vegan_otu(turtle), sampledf$Location)

#GROUP DISPERSION TESTS

sex <- betadisper(turtle_bray, sampledf$Sex)
permutest(sex)

location <- betadisper(turtle_bray, sampledf$Location)
permutest(location)
TukeyHSD(location)

#Kruskal-Wallis Rank Sum Tests
#date and location are same groups, use metadata with removed NA columns not analyzed

turtle <- read_ods("turtlemetadatafinalexcmwt.ods")

turtle$CarapaceLength <- as.numeric(gsub("\\.", "", turtle$CarapaceLength))
turtle$Date <- as.numeric(gsub("\\.", "", turtle$Date))
turtle

a <- kruskal.test(CarapaceLength~factor(Date), data = turtle)
a

a <- kruskal.test(CarapaceLength~factor(Sex), data = turtle)
a

###################################
###BAR GRAPH###
turtle_genus <- turtle %>%
  tax_glom(taxrank = "Genus") %>%
  transform_sample_counts(function(x) {x/sum(x)} ) %>%
  psmelt() %>%
  filter(Abundance > 0.02) %>%
  arrange(Genus)

tiff("barplot_genus_custom.tiff", width = 24, height = 12, units = "in", res=300)
genusplot <- ggplot(turtle_genus, aes(x = Sample, y = Abundance, fill = Genus)) +
+ ylab(" Relative Abundance (>2%)") +
+ facet_grid(.~Location, scales = "free") +
+ geom_bar(stat = "identity") +
+ geom_col(color = "#000000") +
+ scale_fill_manual(values = c("#A6CEE3", "#87BAD8", "#68A6CD", "#4992C2", "#2A7FB7", "#3487AD", "#569EA4", "#77B69A", "#99CD91", "#AADB84", "#8CCC6E", "#6FBE59", "#52AF43", "#35A12D", "#5C9E42", "#8A9D5B", "#B89B74", "#E69A8D", "#F88A89", "#F26C6C", "#ED4F50", "#E73233", "#E4201F", "#EA4632", "#F06C45", "#F59258", "#FBB86B", "#FDB35A", "#FDA440", "#FE9527", "#FE870D", "#F98416", "#ED8F47", "#E19B78", "#D5A7A9", "#C8AFD4", "#B294C7", "#9C79B9", "#865FAB", "#70449D", "#825D99", "#A48999", "#C7B699", "#E9E299", "#F8F18F", "#E6CB75", "#D4A55B", "#C27F41", "#B15928"))
+ theme(text = element_text(size=28),
+ axis.text.x = element_text(angle=90, hjust=0.5, vjust=0.5)) +
+ guides(fill=guide_legend(ncol=2))
genusplot
dev.off()

turtle_phylum <- turtle %>%
  tax_glom(taxrank = "Phylum") %>%
  transform_sample_counts(function(x) {x/sum(x)} ) %>%
  psmelt() %>%
  filter(Abundance > 0.02) %>%
  arrange(Phylum)

tiff("barplot_phylum_custom.tiff", width = 20, height = 9, units = "in", res=300)
phylumplot <- ggplot(turtle_phylum, aes(x = Sample, y = Abundance, fill = Phylum)) +
+ ylab(" Relative Abundance (>2%)") +
+ facet_grid(.~Location, scales = "free") +
+ geom_bar(stat = "identity") +
+ geom_col(color = "#000000") +
+ scale_fill_manual(values = c("#A6CEE3", "#2A7FB7", "#99CD91", "#52AF43", "#B89B74", "#ED4F50", "#F06C45", "#FDA440", "#ED8F47", "#B294C7", "#825D99", "#F8F18F", "#B15928"))
+ theme(text = element_text(size=28),
+ axis.text.x = element_text(angle=90, hjust=0.5, vjust=0.5))
phylumplot
dev.off()

#Water Temp Comparisons Among Locations
#Kruskal-Wallis and Dunn's 
dat<-data.frame(v1=c(1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3), V2=c(29.4, 29.4, 29.4, 29.8, 29.8, 29.8, 25.9, 25.9, 26, 26, NA, NA, NA, NA, NA, NA, NA, 24.1, 25.4, 24.1, 24.1, 25.4, 25.4, 22.4, 22.4, 24.1, 24.1, 24.1, 24.1, 22.4))

###imputed means for NA, not used in Dunn's
#imp<-apply(dat, 2, mean, na.rm=TRUE)
#df<-dat
#for(i in 1:ncol(dat))
#+ {df[is.na(df[,i]),i]<-imp[i]
#+ }
#df


#default Holm method
dunnTest(V2~factor(v1), data = dat, method="bh")
